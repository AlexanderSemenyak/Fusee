<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <BuildDependsOn>
      <!--FuseeBeforeBuild;-->

      $(BuildDependsOn);

      FuseeCollectAndCopyAssets;
      FuseeResolveAssetDependencies;

      FuseeCopyNativeLibrary;
      FuseeResolveNativeDependencies;
    </BuildDependsOn>
  </PropertyGroup>

  <PropertyGroup>   
    <!--LIBRARY W/O WASM-->
    <AssetDestinationFolder Condition=" '$(OutputType)' == 'Library'">$(OutputPath)$(AssemblyName).Assets\</AssetDestinationFolder>
    <!--DESKTOP-->
    <AssetDestinationFolder Condition="  $(AssemblyName.Contains('Desktop')) And '$(OutputType)' != 'Library'">$(OutputPath)Assets\</AssetDestinationFolder>
    <!--WASM-->
    <AssetDestinationFolder Condition="  $(AssemblyName.Contains('WebAsm'))">$(OutputPath)Assets\</AssetDestinationFolder>
  </PropertyGroup>

  <Target Name="FuseeBeforeBuild">
  </Target>

  <Target Name="FuseeCopyNativeLibrary" DependsOnTargets="FuseeSetNativeDestination">
    <ItemGroup>
      <_CopyNativeItems Include="$(ProjectDir)Natives\*.*" />
      <!-- Getting all files that have no Build Action and are linked to the project -->
      <_AllNoneItemsWithLinks Include="@(None->HasMetadata('Link'))" />
      <!-- Going through all those files and checking if the path they are linked to starts with Natives -->
      <_AllNoneItemsWithLinksAndNativesAsPath Include="@(_AllNoneItemsWithLinks)" Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('%(Link)', '^Natives\\.+'))" />
      <!-- Merge the linked natives with the files in the folder -->
      <_CopyNativeItems Include="@(_AllNoneItemsWithLinksAndNativesAsPath)" />
    </ItemGroup>
    <Copy SourceFiles="@(_CopyNativeItems)" DestinationFolder="$(FuseeNativeDestination)" />
  </Target>

  <Target Name="FuseeResolveNativeDependencies"
	    		DependsOnTargets="FuseeSetNativeDestination;FuseeAssembleFuseeNativeDependency"
			    Inputs="@(FuseeNativeDependency -> %(FuseeNativeDependency.FullPath))"
			    Outputs="@(FuseeNativeDependency -> $(FuseeNativeDestination)%(FuseeNativeDependency.Filename)%(FuseeNativeDependency.Extension))">
    <!-- Copy all referenced Natives to the "<dll-name>.Natives" of this assembly -->
    <Copy SourceFiles="%(FuseeNativeDependency.FullPath)" DestinationFolder="$(FuseeNativeDestination)" ContinueOnError="true"/>
  </Target>

  <Target Name="FuseeCollectAndCopyAssets" Condition="'$(OutputType)' == 'Library'">
    <ItemGroup>
      <_CopyAssetsItems Include="$(ProjectDir)Assets\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(_CopyAssetsItems)" DestinationFolder="$(AssetDestinationFolder)" />
  </Target>

  <!--ALL Projects: Collect and copy Assets from referenced dlls into the AssetDestinationFolder-->
  <Target Name="FuseeResolveAssetDependencies">
    <ItemGroup>
      <FuseeAssetDependency Include="%(ReferencePath.RootDir)%(ReferencePath.Directory)%(ReferencePath.Filename).Assets\*.*"/>
    </ItemGroup>
    <!-- Copy all referenced assets to the "<dll-name>.Scripts" or the Assets.Scripts subfolder of this assembly -->
    <Copy SourceFiles="%(FuseeAssetDependency.FullPath)" DestinationFolder="$(AssetDestinationFolder)" ContinueOnError="true"/>
  </Target>

  <Target Name="FuseeSetNativeDestination">
    <!-- define a destination where the dependent native dlls should go. If we are creating a library (dll) all indirectly referenced
		     native dlls should go into a <dll-name>.Natives folder. If we are creating an exe all dlls should go directly to the output folder-->
    <PropertyGroup>
      <FuseeNativeDestination Condition=" '$(OutputType)' == 'Library' ">$(OutputPath)$(AssemblyName).Natives\</FuseeNativeDestination>
      <FuseeNativeDestination Condition=" '$(OutputType)' != 'Library' ">$(OutputPath)</FuseeNativeDestination>
    </PropertyGroup>
  </Target>

  <Target Name="FuseeAssembleFuseeNativeDependency">
    <!-- Gather all referenced Natives below any (existing) "<referenced-dll-name>.Natives" subfolder for all referenced projects -->
    <ItemGroup>
      <FuseeNativeDependency  Include="%(ReferencePath.RootDir)%(ReferencePath.Directory)%(ReferencePath.Filename).Natives\*.*"/>
    </ItemGroup>
  </Target>
</Project>